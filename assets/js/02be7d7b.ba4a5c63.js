"use strict";(self.webpackChunkfeatureflow_docs=self.webpackChunkfeatureflow_docs||[]).push([[446],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=u(n),m=r,c=s["".concat(p,".").concat(m)]||s[m]||f[m]||l;return n?a.createElement(c,o(o({ref:t},d),{},{components:n})):a.createElement(c,o({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9601:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const l={title:"ReactJS Client",sidebar_label:"ReactJS Client",slug:"/reactjs-client"},o=void 0,i={unversionedId:"SDK_Guides/reactjs",id:"SDK_Guides/reactjs",title:"ReactJS Client",description:"Github//github.com/featureflow/featureflow-angular",source:"@site/docs/05-SDK_Guides/reactjs.mdx",sourceDirName:"05-SDK_Guides",slug:"/reactjs-client",permalink:"/reactjs-client",draft:!1,tags:[],version:"current",frontMatter:{title:"ReactJS Client",sidebar_label:"ReactJS Client",slug:"/reactjs-client"},sidebar:"docsSidebar",previous:{title:"AWS Lambda",permalink:"/using-featureflow-with-aws-lambda"}},p={},u=[{value:"Installation",id:"installation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"API",id:"api",level:3},{value:"<code>&lt;FeatureflowProvider client&gt;</code>",id:"featureflowprovider-client",level:4},{value:"<code>withFeatureflow([mapFeatureListeners], [clientProp])(Component)</code>",id:"withfeatureflowmapfeaturelisteners-clientpropcomponent",level:4},{value:"<code>FeatureflowConfig</code>",id:"featureflowconfig",level:4}],d={toc:u};function s(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Github: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/featureflow/featureflow-angular"},"https://github.com/featureflow/featureflow-angular")),(0,r.kt)("p",null,"Firstly, Get your Featureflow account at ",(0,r.kt)("a",{parentName:"p",href:"http://www.featureflow.io"},"featureflow.io")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Version ^2.x.x uses the new react context API and therefore requires react > 16.3\nTo use featureflow with versions of react below 16.3, please use the 1.x.x client."),(0,r.kt)("p",{parentName:"admonition"},"When using the 1.x client you will need to also include the core javascript api:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ npm install --save featureflow-client\n")),(0,r.kt)("p",{parentName:"admonition"},"Version 2.x.x includes the core javascript SDK so there is no need to install it in addition to ",(0,r.kt)("inlineCode",{parentName:"p"},"react-featureflow-client"),".")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Using NPM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install --save react-featureflow-client\n")),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"Getting started is simple:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Wrap your application with a featureflow provider - there should only be one provider - it should sit at your top level App component.")),(0,r.kt)("p",null,"If you have"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  ReactDOM.render(\n      <App feature=\"example-feature\"/>,\n    document.getElementById('root')\n  );\n")),(0,r.kt)("p",null,"wrap ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"withFeatureflowProvider"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { withFeatureflowProvider, useFeatureflow, useFeatures } from 'react-featureflow-client'\n\nconst FF_KEY = 'js-env-YOUR_KEY_HERE';\nconst user = {\n  attributes: {\n    tier: 'gold',\n    country: 'australia',\n    roles: ['role1', 'role2']\n  }\n};\n\nexport default (withFeatureflowProvider({\n  apiKey: FF_KEY,\n  config: {\n    streaming: true,\n  },\n  user\n})(App))\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"You then have access to the ",(0,r.kt)("inlineCode",{parentName:"li"},"featureflow")," client and evaluated ",(0,r.kt)("inlineCode",{parentName:"li"},"features")," using hooks:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useFeatureflow, useFeatures } from 'react-featureflow-client'\n\nconst App: React.FC<Props> = () => {\n\n  const featureflow = useFeatureflow();\n  const features = useFeatures();\n  const feature = 'example-feature';\n\n  return  <div>\n    <h1>A very simple example</h1>\n    <b>{feature}</b>\n    { featureflow.evaluate(feature).isOn() && [\n        <p key=\"1\">I am on</p>,\n    ]}\n    { featureflow.evaluate(feature).isOff() && [\n      <p key=\"1\">I am off</p>,\n      ]\n    }\n    {Object.keys(features).map(key => <div>{key} : {features[key]}</div>)}\n  </div>\n}\n")),(0,r.kt)("p",null,"If you want your component to wait until featureflow has received an initial response, set ",(0,r.kt)("inlineCode",{parentName:"p"},"config.waitForInit = true"),"\nin the featureflowConfig."),(0,r.kt)("p",null,"If you want to render a different component while waiting on response from featureflow, you can pass in ",(0,r.kt)("inlineCode",{parentName:"p"},"config.preInitComponent = <YourComponent/>"),"."),(0,r.kt)("p",null,"This is especially useful if you may have a race condition with your application on initial load of features."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"\nconst featureflowConfig = {\n    waitForInit: true,\n    preInitComponent: <YourComponent/>\n}\n\nexport default withFeatureflow(featureflowConfig)(MyComponent);\n")),(0,r.kt)("h3",{id:"api"},"API"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"react-featureflow-client")," exposes 2 properties."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import {\n  FeatureflowProvider,\n  withFeatureflow\n} from 'react-featureflow-client';\n")),(0,r.kt)("h4",{id:"featureflowprovider-client"},(0,r.kt)("inlineCode",{parentName:"h4"},"<FeatureflowProvider client>")),(0,r.kt)("p",null,"Connects your featureflow to your React application. Must only have one child."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"client*")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"featureflow")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"An instantiated featureflow client")))),(0,r.kt)("h4",{id:"withfeatureflowmapfeaturelisteners-clientpropcomponent"},(0,r.kt)("inlineCode",{parentName:"h4"},"withFeatureflow([mapFeatureListeners], [clientProp])(Component)")),(0,r.kt)("p",null,"Pass the featureflow client to a React Component's props."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"featureflowConfig")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"object")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}")),(0,r.kt)("td",{parentName:"tr",align:null},"Use to set the ",(0,r.kt)("inlineCode",{parentName:"td"},"update")," property and featureflow ",(0,r.kt)("inlineCode",{parentName:"td"},"clientName")," specifically for the component. See ",(0,r.kt)("inlineCode",{parentName:"td"},"FeatureflowConfig"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Component")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Component")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("inlineCode",{parentName:"strong"},"Required"))),(0,r.kt)("td",{parentName:"tr",align:null},"The component to pass the featureflow client to.")))),(0,r.kt)("h4",{id:"featureflowconfig"},(0,r.kt)("inlineCode",{parentName:"h4"},"FeatureflowConfig")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Properties"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"update")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"If set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," then when features update from featureflow, the component will update automatically.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"clientName")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"featureflow"')),(0,r.kt)("td",{parentName:"tr",align:null},"Use this to change the prop that the featureflow client will bind to.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"waitForInit")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"Use this to wait for featureflow to respond with features before the rendering the component")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"preInitComponent")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ReactComponent")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:null},"Use this display another component when the featureflow rules haven't loaded and ",(0,r.kt)("inlineCode",{parentName:"td"},"waitForInit")," is ",(0,r.kt)("inlineCode",{parentName:"td"},"true"))))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { withFeatureflow } from 'react-featureflow-client';\n\nclass MyComponent extends React.Component{\n  onClickHandler(){\n    this.props.customFeatureflow.updateContext(/*...*/);\n  }\n  //...\n  render(){\n    return (\n      <div>\n        {this.props.customFeatureflow.evaluate('example-feature').isOn() &&\n          <p>\n            This text will be shown if \"example-feature\" is \"on\".\n            It will be updated in realtime if \"example-feature\" changes it's value.\n          </p>\n        }\n      </div>\n    )\n  }\n}\n\nexport default withFeatureflow({update: true, clientName: 'customFeatureflow'})(MyComponent);\n")),(0,r.kt)("p",null,"For more, see the github repo ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/featureflow/featureflow-javascript-sdk"},"Featureflow Javascript Client")))}s.isMDXComponent=!0}}]);